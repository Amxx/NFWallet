{
  "contractName": "CounterfactualTokenProxy",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{\"initialize(address,bytes)\":{\"details\":\"Contract initializer.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/amxx/Work/Projects/NFWallets/solidity/contracts/core/CounterfactualTokenProxy.sol\":\"CounterfactualTokenProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/amxx/Work/Projects/NFWallets/solidity/contracts/core/CounterfactualTokenProxy.sol\":{\"keccak256\":\"0x0219c6f39d7642763667c7c1130e807947da2a315af7ae6b9812ee7b968797b5\",\"urls\":[\"bzz-raw://2a1ee79d8a66a14195b9e4614ed2c1a9c893d2bdff31012e03524b268e0ab7e8\",\"dweb:/ipfs/Qmdr3hP77ca6MCEDHehSN39nuFkLbo6ybWFb5qpSawfeA2\"]},\"/home/amxx/Work/Projects/NFWallets/solidity/contracts/core/IReceiver.sol\":{\"keccak256\":\"0x387fb76bb575a8c1ecd09763e189badbb6d2cfd992571281070fe06cdfc654cd\",\"urls\":[\"bzz-raw://0bffd2276c30158820476a0e7ab549938982340efa85f17d39919c6bc122f6c0\",\"dweb:/ipfs/QmXvsUUQegAsJEERbvH9yaWa6goFBoDcBiQ54BYxEddq2J\"]},\"@iexec/solidity/contracts/Upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x47ec56a1226ecf04d49aa82f768814923c1957b69f7fc9e7e470885c75b5a2c6\",\"urls\":[\"bzz-raw://4eae82be03a247a27a2948ed12d5a826dea977f4b5528830c19d9cf4c23dcd53\",\"dweb:/ipfs/Qmb9HtnohAMvjb7vYnXaT3AnQd9p9sLsThnyLnXVzz1umq\"]},\"@iexec/solidity/contracts/Upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0xe1bf07e5d913bd04484305a3fb0cc576f6b5d8e4fc0406bf7c9a8b6b2ed766e5\",\"urls\":[\"bzz-raw://b42f6dff696ceadeb44a02aae3049e603984c18af8d94f33fb6544a8b279179c\",\"dweb:/ipfs/QmRWTaRHCGZhKZFKrVAJwXukXiCZcezrVhJJ28H2qBbai7\"]},\"@iexec/solidity/contracts/Upgradeability/Proxy.sol\":{\"keccak256\":\"0xe5009fc472810cad8d90a82cac06375de3cd719c0db4cc35299027ee7e1e8e8d\",\"urls\":[\"bzz-raw://14848e89e6f344c6e2f2708d98a6d13a874ce3d9b834ca7212ea4af853f59b85\",\"dweb:/ipfs/QmdpZG6Y2pdBhHc2DfvHAwmdE3UVanFXeXj8CYXJJ7w7vh\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506103dd806100206000396000f3fe6080604052600436106100225760003560e01c8063d1f57894146100695761005f565b3661005f5760408051348152905133917f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874919081900360200190a2005b61006761011f565b005b6100676004803603604081101561007f57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100aa57600080fd5b8201836020820111156100bc57600080fd5b803590602001918460018302840111640100000000831117156100de57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610139945050505050565b610127610137565b61013761013261025c565b610281565b565b600061014361025c565b6001600160a01b03161461015657600080fd5b60405180602361034a82396040519081900360230190207f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c314905061019757fe5b6101a0826102a5565b805115610258576000826001600160a01b0316826040518082805190602001908083835b602083106101e35780518252601f1990920191602091820191016101c4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610243576040519150601f19603f3d011682016040523d82523d6000602084013e610248565b606091505b505090508061025657600080fd5b505b5050565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b3660008037600080366000845af43d6000803e8080156102a0573d6000f35b3d6000fd5b6102ae8161030d565b6102e95760405162461bcd60e51b815260040180806020018281038252603b81526020018061036d603b913960400191505060405180910390fd5b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061034157508115155b94935050505056fe6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220128c4a9fd31464cd42832cf1bbd4841e3bb00675f1001390b859f01e8440fa4964736f6c63430006060033",
  "deployedBytecode": "0x6080604052600436106100225760003560e01c8063d1f57894146100695761005f565b3661005f5760408051348152905133917f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f88525874919081900360200190a2005b61006761011f565b005b6100676004803603604081101561007f57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156100aa57600080fd5b8201836020820111156100bc57600080fd5b803590602001918460018302840111640100000000831117156100de57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610139945050505050565b610127610137565b61013761013261025c565b610281565b565b600061014361025c565b6001600160a01b03161461015657600080fd5b60405180602361034a82396040519081900360230190207f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c314905061019757fe5b6101a0826102a5565b805115610258576000826001600160a01b0316826040518082805190602001908083835b602083106101e35780518252601f1990920191602091820191016101c4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610243576040519150601f19603f3d011682016040523d82523d6000602084013e610248565b606091505b505090508061025657600080fd5b505b5050565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b3660008037600080366000845af43d6000803e8080156102a0573d6000f35b3d6000fd5b6102ae8161030d565b6102e95760405162461bcd60e51b815260040180806020018281038252603b81526020018061036d603b913960400191505060405180910390fd5b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061034157508115155b94935050505056fe6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220128c4a9fd31464cd42832cf1bbd4841e3bb00675f1001390b859f01e8440fa4964736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "140:168:3:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;140:168:3;;;;;;;",
  "deployedSourceMap": "140:168:3:-:0;;;;;;;;;;;;;;;;;;;;;;;271:31;;;292:9;271:31;;;;280:10;;271:31;;;;;;;;;;140:168;;604:11:15;:9;:11::i;:::-;140:168:3;822:348:14;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;822:348:14;;-1:-1:-1;;;;;822:348:14;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;822:348:14;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;822:348:14;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;822:348:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;822:348:14;;-1:-1:-1;822:348:14;;-1:-1:-1;;;;;822:348:14:i;2141:90:15:-;2177:15;:13;:15::i;:::-;2198:28;2208:17;:15;:17::i;:::-;2198:9;:28::i;:::-;2141:90::o;822:348:14:-;936:1;907:17;:15;:17::i;:::-;-1:-1:-1;;;;;907:31:14;;899:40;;12:1:-1;9;2:12;899:40:14;975:48;;;;;;;;;;;;;;;;;790:66:13;952:71:14;;-1:-1:-1;945:79:14;;;;1030:26;1049:6;1030:18;:26::i;:::-;1065:12;;:16;1062:104;;1092:12;1109:6;-1:-1:-1;;;;;1109:19:14;1129:5;1109:26;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1109:26:14;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;1091:44:14;;;1151:7;1143:16;;12:1:-1;9;2:12;1143:16:14;1062:104;;822:348;;:::o;975:165:13:-;790:66;1119:11;;1103:33::o;1047:743:15:-;1349:14;1346:1;1343;1330:34;1545:1;1542;1526:14;1523:1;1507:14;1500:5;1487:60;1609:16;1606:1;1603;1588:38;1641:6;1696:38;;;;1761:16;1758:1;1751:27;1696:38;1715:16;1712:1;1705:27;1554:285:13;1632:37;1651:17;1632:18;:37::i;:::-;1624:109;;;;-1:-1:-1;;;1624:109:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;790:66;1798:31;1790:45::o;685:610:32:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:32;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:32:o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"@iexec/solidity/contracts/Upgradeability/InitializableUpgradeabilityProxy.sol\";\nimport \"./IReceiver.sol\";\n\ncontract CounterfactualTokenProxy is InitializableUpgradeabilityProxy, IReceiver\n{\n\treceive()\n\texternal payable override\n\t{\n\t\temit Received(msg.sender, msg.value);\n\t}\n}\n",
  "sourcePath": "/home/amxx/Work/Projects/NFWallets/solidity/contracts/core/CounterfactualTokenProxy.sol",
  "ast": {
    "absolutePath": "/home/amxx/Work/Projects/NFWallets/solidity/contracts/core/CounterfactualTokenProxy.sol",
    "exportedSymbols": {
      "CounterfactualTokenProxy": [
        596
      ]
    },
    "id": 597,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 577,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@iexec/solidity/contracts/Upgradeability/InitializableUpgradeabilityProxy.sol",
        "file": "@iexec/solidity/contracts/Upgradeability/InitializableUpgradeabilityProxy.sol",
        "id": 578,
        "nodeType": "ImportDirective",
        "scope": 597,
        "sourceUnit": 1282,
        "src": "25:87:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/Projects/NFWallets/solidity/contracts/core/IReceiver.sol",
        "file": "./IReceiver.sol",
        "id": 579,
        "nodeType": "ImportDirective",
        "scope": 597,
        "sourceUnit": 732,
        "src": "113:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 580,
              "name": "InitializableUpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1281,
              "src": "177:32:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InitializableUpgradeabilityProxy_$1281",
                "typeString": "contract InitializableUpgradeabilityProxy"
              }
            },
            "id": 581,
            "nodeType": "InheritanceSpecifier",
            "src": "177:32:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 582,
              "name": "IReceiver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 731,
              "src": "211:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IReceiver_$731",
                "typeString": "contract IReceiver"
              }
            },
            "id": 583,
            "nodeType": "InheritanceSpecifier",
            "src": "211:9:3"
          }
        ],
        "contractDependencies": [
          731,
          1226,
          1281,
          1333
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 596,
        "linearizedBaseContracts": [
          596,
          731,
          1281,
          1226,
          1333
        ],
        "name": "CounterfactualTokenProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1292
            ],
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "262:44:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "280:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "280:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "292:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "292:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 587,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "271:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "271:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "EmitStatement",
                  "src": "266:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 595,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 585,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "252:8:3"
            },
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:2:3"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:3"
            },
            "scope": 596,
            "src": "224:82:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 597,
        "src": "140:168:3"
      }
    ],
    "src": "0:309:3"
  },
  "legacyAST": {
    "absolutePath": "/home/amxx/Work/Projects/NFWallets/solidity/contracts/core/CounterfactualTokenProxy.sol",
    "exportedSymbols": {
      "CounterfactualTokenProxy": [
        596
      ]
    },
    "id": 597,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 577,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "@iexec/solidity/contracts/Upgradeability/InitializableUpgradeabilityProxy.sol",
        "file": "@iexec/solidity/contracts/Upgradeability/InitializableUpgradeabilityProxy.sol",
        "id": 578,
        "nodeType": "ImportDirective",
        "scope": 597,
        "sourceUnit": 1282,
        "src": "25:87:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/Projects/NFWallets/solidity/contracts/core/IReceiver.sol",
        "file": "./IReceiver.sol",
        "id": 579,
        "nodeType": "ImportDirective",
        "scope": 597,
        "sourceUnit": 732,
        "src": "113:25:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 580,
              "name": "InitializableUpgradeabilityProxy",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1281,
              "src": "177:32:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InitializableUpgradeabilityProxy_$1281",
                "typeString": "contract InitializableUpgradeabilityProxy"
              }
            },
            "id": 581,
            "nodeType": "InheritanceSpecifier",
            "src": "177:32:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 582,
              "name": "IReceiver",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 731,
              "src": "211:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IReceiver_$731",
                "typeString": "contract IReceiver"
              }
            },
            "id": 583,
            "nodeType": "InheritanceSpecifier",
            "src": "211:9:3"
          }
        ],
        "contractDependencies": [
          731,
          1226,
          1281,
          1333
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 596,
        "linearizedBaseContracts": [
          596,
          731,
          1281,
          1226,
          1333
        ],
        "name": "CounterfactualTokenProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1292
            ],
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "262:44:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 588,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "280:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "280:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 590,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "292:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "292:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 587,
                      "name": "Received",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "271:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "271:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "EmitStatement",
                  "src": "266:36:3"
                }
              ]
            },
            "documentation": null,
            "id": 595,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 585,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "252:8:3"
            },
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "231:2:3"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:3"
            },
            "scope": 596,
            "src": "224:82:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 597,
        "src": "140:168:3"
      }
    ],
    "src": "0:309:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.1.0",
  "updatedAt": "2020-05-21T14:56:18.018Z",
  "devdoc": {
    "methods": {
      "initialize(address,bytes)": {
        "details": "Contract initializer.",
        "params": {
          "_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
          "_logic": "Address of the initial implementation."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}