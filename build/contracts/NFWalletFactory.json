{
  "contractName": "NFWalletFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "master",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyCode",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxyCodeHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "openWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_salt",
          "type": "bytes32"
        }
      ],
      "name": "predictWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ens",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"master\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"openWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"predictWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxyCodeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"\\\" | \\\"token.uri/123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"123\\\" | \\\"token.uri/123\\\" | \\\"token.uri/\\\" | \\\"\\\" | \\\"token.uri/<tokenId>\\\" |===     * Requirements:     * - `tokenId` must exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/amxx/Work/Projects/NFWallets/contracts/NFWalletFactory.sol\":\"NFWalletFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/amxx/Work/Projects/NFWallets/contracts/NFWallet.sol\":{\"keccak256\":\"0xe12f656b05603c3fd934fdc32cf08dfa7c5fecbec06f0b0c35c5a83719d4c459\",\"urls\":[\"bzz-raw://f5a06fa5f2a5e345edcfb40007d5c23ee554a0fb3b1071aa40813797e97a5b69\",\"dweb:/ipfs/QmUwU8Y8AqLqBvCnGS7ED8EqmfAWxj7ky3V3aDcq928mQ2\"]},\"/home/amxx/Work/Projects/NFWallets/contracts/NFWalletFactory.sol\":{\"keccak256\":\"0xdc3ff8b1dbd23e33061e1e1eb59f00e46410c946a99ee90738dd7dbba10706cf\",\"urls\":[\"bzz-raw://9e245e6d795ce31ac33a90cda91824d971927c73533d9c6620629a2c1525a58f\",\"dweb:/ipfs/QmauPqGwA7xRPquYzdEqmquDE1rnXxpvngCwqyXsdvfT4M\"]},\"/home/amxx/Work/Projects/NFWallets/contracts/core/Registry.sol\":{\"keccak256\":\"0x21ca821b02464670965c275fff9f411ac325045fdb96b512cd92105b61ccf71d\",\"urls\":[\"bzz-raw://2b452328b35edcf61b36bd26899922db19a2be47dad990f37910035c8ef8dfbd\",\"dweb:/ipfs/QmPzMvwr1H87YsZ9e4PZqEJWuWSAHZH4C2jBZGUEqAyb7h\"]},\"/home/amxx/Work/Projects/NFWallets/contracts/core/RegistryEntry.sol\":{\"keccak256\":\"0x9945296a87e645347b7c600add2dc20a69a515d44d9bf8ed7b38527b2d924d6d\",\"urls\":[\"bzz-raw://b05e5945059daf07f14d4f2084b024c1e00fde2b1f19d2b20c0deb57ee85d624\",\"dweb:/ipfs/QmWuChHgt7SeixcDuxA9THVkZembY1Xkc3wzZpPNhSDM6f\"]},\"@ensdomains/ens/contracts/ENS.sol\":{\"keccak256\":\"0x10b88673d8c180cd62523be4fec7607c65594eb4f0c561fa0fbc0784422b4871\",\"urls\":[\"bzz-raw://b3de1882a4a1a1b13c27ee6dc04cc58c34ac392c80cad507de2cdfa8c02712fe\",\"dweb:/ipfs/QmeKcaBF8QdJjXiqFrPJkAtK3et5kUL8XJrnHjwhAThRMT\"]},\"@iexec/solidity/contracts/ENStools/ENSReverseRegistration.sol\":{\"keccak256\":\"0xf3f46b28b19d9132ae78c2a43263c06a73cb042ce25175b732e0c1a41c5bbe5a\",\"urls\":[\"bzz-raw://7ca85a78f3f3eafbef6d72c5cd0c35e5b827c797af786cd170659499a0a2c3be\",\"dweb:/ipfs/QmbHZ8zFsiE1PRh7FKt1pt5jR8F6B8HiZ32Mgc8Py3qCUu\"]},\"@iexec/solidity/contracts/Upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x47ec56a1226ecf04d49aa82f768814923c1957b69f7fc9e7e470885c75b5a2c6\",\"urls\":[\"bzz-raw://4eae82be03a247a27a2948ed12d5a826dea977f4b5528830c19d9cf4c23dcd53\",\"dweb:/ipfs/Qmb9HtnohAMvjb7vYnXaT3AnQd9p9sLsThnyLnXVzz1umq\"]},\"@iexec/solidity/contracts/Upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0xe1bf07e5d913bd04484305a3fb0cc576f6b5d8e4fc0406bf7c9a8b6b2ed766e5\",\"urls\":[\"bzz-raw://b42f6dff696ceadeb44a02aae3049e603984c18af8d94f33fb6544a8b279179c\",\"dweb:/ipfs/QmRWTaRHCGZhKZFKrVAJwXukXiCZcezrVhJJ28H2qBbai7\"]},\"@iexec/solidity/contracts/Upgradeability/Proxy.sol\":{\"keccak256\":\"0xd89f285d80cfeff0efc87f11dbc024a587da3bba142a06695cbac7e4050e9302\",\"urls\":[\"bzz-raw://9c8323ec7efc9fde6c1529f1070c3f3406adb5f8836b17221530d8f0110fe3f4\",\"dweb:/ipfs/QmURRsX9L2gZ83aMULtY1EuRMJExHhFYErCbkxE5CNkAzE\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x98aa1380fd49a255d6cbea58558ea76bff35c59b218671fde8842907b44e7390\",\"urls\":[\"bzz-raw://613eaff66d4c270ddd87448c06267b6e043ef8c8223cb39d8767bc9daa9cb1ec\",\"dweb:/ipfs/Qmcg56orudv25ghmnZCxN37HwNKCXmTTDxj5cyoYYnvHTg\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x67a43d3926e72576c96ebf0e6360c979a8cc04f25e4b0ca40c221547d8903ba4\",\"urls\":[\"bzz-raw://77c6f48115c491411f0e27f6b70e2e524b1b57c66e74bd7f1974a31a448e2540\",\"dweb:/ipfs/QmPZCizouS9PVJ1dVf8zqTjHyEo5cSa1ZmPCQpk52TgrmV\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x734b5bedb78074a59bca6aff9e5a1801c9c7e9c5314daf32e14857161fb36932\",\"urls\":[\"bzz-raw://4574e71185f6693eb5cdf7a5126fba97caf0ec0366b08290dd361af44b3414d3\",\"dweb:/ipfs/QmTPBh1R3EU973H7h6D1kQ1XBA1oX2QdSHZACyytWUYKsn\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xf81dbd00ad4a1e4795df72759e33872c2599ea6c060be5898ed5d6fcd8ee9a11\",\"urls\":[\"bzz-raw://44dfcc25314c5ed29bc069c4746f87d98bb30a8dbc1a9bdeb797c2a530b9b9c5\",\"dweb:/ipfs/QmbRc5bKDobjE6zamLUy6Sh5HKd6XtNAsfBJzgZuQB3jpv\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa17f4147965ceccd9f2017b14fcf8ef142346ec69c7e0424fd5c99f5ffeed8fa\",\"urls\":[\"bzz-raw://25315aea456015e8a2bc2b5badde793d1ae16d67d09df50ecb90a2af13674b92\",\"dweb:/ipfs/QmTujwcp5f1LioDNdRMfsXs2MsCWu2UeijhEg4VnDbzZmk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x66d1ed2a353be8d2492833a185c53a8f1de8d8fa575a201e9825cf334d79659a\",\"urls\":[\"bzz-raw://a2e9b79e9cf5b398cd29b30df860a6521eefadd9882a346c423afbee5aee606e\",\"dweb:/ipfs/QmUq7gfqR5x1DaMpRKkWwmLMGLPzqUQhqhFEJ2vcgvFraH\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xfd5cf8319cb84ca04ea407d6fba686d53ad7f5d2bf476f41678f5a751d12a7ea\",\"urls\":[\"bzz-raw://45b75b553c4a9053429609b1c3db481f1728ca00448f01acc4065249bbf87adc\",\"dweb:/ipfs/QmRZH6QM32mJn1GZCAPXUQtBz65H4kk6DsGQbGNo4ZNPy9\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0x7f6401708b61f575b497aa7c8118ca9d70348643c83c26e70d9b643edf1a95c1\",\"urls\":[\"bzz-raw://b020d65f592c1715bc3d5799ad835cd975ef7d314f340f27603fb99ad86a0427\",\"dweb:/ipfs/QmQoGZmzE5aDTMGJM4BW77eraerfTSV9Rs8wykpQ42i1in\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xd1d78b1c8534fbcf8fdc8fbfec9133df142ef8cae9ae820929dfe6d80d2c790a\",\"urls\":[\"bzz-raw://193a827fbe83fa83c4cabb172dc438dd45c50253858a1f2bf56e8f9a2d548386\",\"dweb:/ipfs/QmbWBHwHv7CyHSZY6jxnaDiHWGEEyVb8LeGdRpWXUjaiBr\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200002090620002df565b604051809103906000f0801580156200003d573d6000803e3d6000fd5b5060408051808201825260128152714e6f6e46756e6769626c6557616c6c65747360701b602080830191909152825180840190935260048352634e46577360e01b90830152908181620000a06301ffc9a760e01b6001600160e01b036200025516565b8151620000b5906006906020850190620002ed565b508051620000cb906007906020840190620002ed565b50620000e76380ac58cd60e01b6001600160e01b036200025516565b62000102635b5e139f60e01b6001600160e01b036200025516565b6200011d63780e9d6360e01b6001600160e01b036200025516565b5060009050620001356001600160e01b03620002da16565b600a80546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600b80546001600160a01b0319166001600160a01b038516179055604051620001af6020820162000372565b601f1982820381018352601f909101166040528051620001d991600c9160209190910190620002ed565b50600c60405180828054600181600116156101000203166002900480156200023b5780601f10620002185761010080835404028352918201916200023b565b820191906000526020600020905b81548152906001019060200180831162000226575b5050604051908190039020600d55506200039d9350505050565b6001600160e01b03198082161415620002b5576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b335b90565b610764806200294883390190565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200033057805160ff191683800117855562000360565b8280016001018555821562000360579182015b828111156200036057825182559160200191906001019062000343565b506200036e92915062000380565b5090565b6103cd80620030ac83390190565b620002dc91905b808211156200036e576000815560010162000387565b61259b80620003ad6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80636fa59bbc116100de578063a22cb46511610097578063e985e9c511610071578063e985e9c5146105d5578063ee97f7f314610603578063eee391111461060b578063f2fde38b146106135761018e565b8063a22cb465146104c4578063b88d4fde146104f2578063c87b56dd146105b85761018e565b80636fa59bbc1461045257806370a082311461045a578063715018a61461048057806375f50019146104885780638da5cb5b146104b457806395d89b41146104bc5761018e565b806323b872dd1161014b57806342842e0e1161012557806342842e0e146103da5780634f6ccce7146104105780636352211e1461042d5780636c0360eb1461044a5761018e565b806323b872dd146102f85780632f745c591461032e5780633121db1c1461035a5761018e565b806301ffc9a71461019357806306fdde03146101ce578063081812fc1461024b578063095ea7b314610284578063136fecbd146102b257806318160ddd146102de575b600080fd5b6101ba600480360360208110156101a957600080fd5b50356001600160e01b031916610639565b604080519115158252519081900360200190f35b6101d661065c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102105781810151838201526020016101f8565b50505050905090810190601f16801561023d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102686004803603602081101561026157600080fd5b50356106f2565b604080516001600160a01b039092168252519081900360200190f35b6102b06004803603604081101561029a57600080fd5b506001600160a01b038135169060200135610754565b005b610268600480360360408110156102c857600080fd5b506001600160a01b03813516906020013561082f565b6102e661084c565b60408051918252519081900360200190f35b6102b06004803603606081101561030e57600080fd5b506001600160a01b0381358116916020810135909116906040013561085d565b6102e66004803603604081101561034457600080fd5b506001600160a01b0381351690602001356108b4565b6102b06004803603604081101561037057600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561039b57600080fd5b8201836020820111156103ad57600080fd5b803590602001918460018302840111640100000000831117156103cf57600080fd5b5090925090506108dc565b6102b0600480360360608110156103f057600080fd5b506001600160a01b03813581169160208101359091169060400135610986565b6102e66004803603602081101561042657600080fd5b50356109a1565b6102686004803603602081101561044357600080fd5b50356109bd565b6101d66109eb565b6101d6610a4c565b6102e66004803603602081101561047057600080fd5b50356001600160a01b0316610ada565b6102b0610b42565b6102686004803603604081101561049e57600080fd5b506001600160a01b038135169060200135610bf6565b610268610c0a565b6101d6610c19565b6102b0600480360360408110156104da57600080fd5b506001600160a01b0381351690602001351515610c7a565b6102b06004803603608081101561050857600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561054357600080fd5b82018360208201111561055557600080fd5b8035906020019184600183028401116401000000008311171561057757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610d7f945050505050565b6101d6600480360360208110156105ce57600080fd5b5035610ddd565b6101ba600480360360408110156105eb57600080fd5b506001600160a01b0381358116916020013516611084565b6102686110b2565b6102e66110c1565b6102b06004803603602081101561062957600080fd5b50356001600160a01b03166110c7565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106e85780601f106106bd576101008083540402835291602001916106e8565b820191906000526020600020905b8154815290600101906020018083116106cb57829003601f168201915b5050505050905090565b60006106fd826111d2565b6107385760405162461bcd60e51b815260040180806020018281038252602c815260200180612490602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061075f826109bd565b9050806001600160a01b0316836001600160a01b031614156107b25760405162461bcd60e51b81526004018080602001828103825260218152602001806125146021913960400191505060405180910390fd5b806001600160a01b03166107c46111e5565b6001600160a01b031614806107e557506107e5816107e06111e5565b611084565b6108205760405162461bcd60e51b81526004018080602001828103825260388152602001806123e36038913960400191505060405180910390fd5b61082a83836111e9565b505050565b60006108438361083e84611257565b611290565b90505b92915050565b6000610858600261133a565b905090565b61086e6108686111e5565b82611345565b6108a95760405162461bcd60e51b81526004018080602001828103825260318152602001806125356031913960400191505060405180910390fd5b61082a8383836113e9565b6001600160a01b0382166000908152600160205260408120610843908363ffffffff61154716565b6108e46111e5565b600a546001600160a01b03908116911614610946576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b61082a8383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061155392505050565b61082a83838360405180602001604052806000815250610d7f565b6000806109b560028463ffffffff6116b816565b509392505050565b600061084682604051806060016040528060298152602001612445602991396002919063ffffffff6116d416565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106e85780601f106106bd576101008083540402835291602001916106e8565b600c805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610ad25780601f10610aa757610100808354040283529160200191610ad2565b820191906000526020600020905b815481529060010190602001808311610ab557829003601f168201915b505050505081565b60006001600160a01b038216610b215760405162461bcd60e51b815260040180806020018281038252602a81526020018061241b602a913960400191505060405180910390fd5b6001600160a01b03821660009081526001602052604090206108469061133a565b610b4a6111e5565b600a546001600160a01b03908116911614610bac576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b600061084383610c0584611257565b6116eb565b600a546001600160a01b031690565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106e85780601f106106bd576101008083540402835291602001916106e8565b610c826111e5565b6001600160a01b0316826001600160a01b03161415610ce8576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610cf56111e5565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610d396111e5565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610d90610d8a6111e5565b83611345565b610dcb5760405162461bcd60e51b81526004018080602001828103825260318152602001806125356031913960400191505060405180910390fd5b610dd784848484611915565b50505050565b6060610de8826111d2565b610e235760405162461bcd60e51b815260040180806020018281038252602f8152602001806124e5602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610eb85780601f10610e8d57610100808354040283529160200191610eb8565b820191906000526020600020905b815481529060010190602001808311610e9b57829003601f168201915b505060095493945050505060026000196101006001841615020190911604610ee1579050610657565b805115610fb2576009816040516020018083805460018160011615610100020316600290048015610f495780601f10610f27576101008083540402835291820191610f49565b820191906000526020600020905b815481529060010190602001808311610f35575b5050825160208401908083835b60208310610f755780518252601f199092019160209182019101610f56565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610657565b6009610fbd84611967565b604051602001808380546001816001161561010002031660029004801561101b5780601f10610ff957610100808354040283529182019161101b565b820191906000526020600020905b815481529060010190602001808311611007575b5050825160208401908083835b602083106110475780518252601f199092019160209182019101611028565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600b546001600160a01b031681565b600d5481565b6110cf6111e5565b600a546001600160a01b03908116911614611131576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166111765760405162461bcd60e51b815260040180806020018281038252602681526020018061236d6026913960400191505060405180910390fd5b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600061084660028363ffffffff611a4216565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061121e826109bd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b604080516024808201939093528151808203909301835260440190526020810180516001600160e01b031663204a7f0760e21b17905290565b60008061132983856040516020018083805190602001908083835b602083106112ca5780518252601f1990920191602091820191016112ab565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019250505060405160208183030381529060405280519060200120600d54611a4e565b6001600160a01b0316949350505050565b600061084682611a5b565b6000611350826111d2565b61138b5760405162461bcd60e51b815260040180806020018281038252602c8152602001806123b7602c913960400191505060405180910390fd5b6000611396836109bd565b9050806001600160a01b0316846001600160a01b031614806113d15750836001600160a01b03166113c6846106f2565b6001600160a01b0316145b806113e157506113e18185611084565b949350505050565b826001600160a01b03166113fc826109bd565b6001600160a01b0316146114415760405162461bcd60e51b81526004018080602001828103825260298152602001806124bc6029913960400191505060405180910390fd5b6001600160a01b0382166114865760405162461bcd60e51b81526004018080602001828103825260248152602001806123936024913960400191505060405180910390fd5b61149183838361082a565b61149c6000826111e9565b6001600160a01b03831660009081526001602052604090206114c4908263ffffffff611a5f16565b506001600160a01b03821660009081526001602052604090206114ed908263ffffffff611a6b16565b506115006002828463ffffffff611a7716565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006108438383611a8d565b604080516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2600482015290516001600160a01b038416916302571be3916024808301926020929190829003018186803b1580156115b957600080fd5b505afa1580156115cd573d6000803e3d6000fd5b505050506040513d60208110156115e357600080fd5b505160405163c47f002760e01b81526020600482018181528451602484015284516001600160a01b039094169363c47f002793869383926044909201919085019080838360005b8381101561164257818101518382015260200161162a565b50505050905090810190601f16801561166f5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561168e57600080fd5b505af11580156116a2573d6000803e3d6000fd5b505050506040513d6020811015610dd757600080fd5b60008080806116c78686611af1565b9097909650945050505050565b60006116e1848484611b6c565b90505b9392505050565b60008061181e600084866040516020018083805190602001908083835b602083106117275780518252601f199092019160209182019101611708565b6001836020036101000a038019825116818451168082178552505050505050905001826001600160a01b03166001600160a01b031660601b81526014019250505060405160208183030381529060405280519060200120600c8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156118145780601f106117e957610100808354040283529160200191611814565b820191906000526020600020905b8154815290600101906020018083116117f757829003601f168201915b5050505050611c36565b600b546040805163347d5e2560e21b81526001600160a01b0392831660048201818152602483019384528851604484015288519596509386169463d1f5789494919389939091606490910190602085019080838360005b8381101561188d578181015183820152602001611875565b50505050905090810190601f1680156118ba5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156118da57600080fd5b505af11580156118ee573d6000803e3d6000fd5b5050505061190584826001600160a01b0316611d47565b6001600160a01b03169392505050565b6119208484846113e9565b61192c84848484611e81565b610dd75760405162461bcd60e51b815260040180806020018281038252603281526020018061233b6032913960400191505060405180910390fd5b60608161198c57506040805180820190915260018152600360fc1b6020820152610657565b8160005b81156119a457600101600a82049150611990565b60608167ffffffffffffffff811180156119bd57600080fd5b506040519080825280601f01601f1916602001820160405280156119e8576020820181803683370190505b50859350905060001982015b8315611a3957600a840660300160f81b82828060019003935081518110611a1757fe5b60200101906001600160f81b031916908160001a905350600a840493506119f4565b50949350505050565b600061084383836120bc565b60006108438383306120d4565b5490565b60006108438383612138565b600061084383836121fe565b60006116e184846001600160a01b038516612248565b81546000908210611acf5760405162461bcd60e51b81526004018080602001828103825260228152602001806123196022913960400191505060405180910390fd5b826000018281548110611ade57fe5b9060005260206000200154905092915050565b815460009081908310611b355760405162461bcd60e51b815260040180806020018281038252602281526020018061246e6022913960400191505060405180910390fd5b6000846000018481548110611b4657fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611c075760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611bcc578181015183820152602001611bb4565b50505050905090810190601f168015611bf95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611c1a57fe5b9060005260206000209060020201600101549150509392505050565b60008084471015611c8e576040805162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b8251611ce1576040805162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015290519081900360640190fd5b8383516020850187f590506001600160a01b0381166116e1576040805162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015290519081900360640190fd5b6001600160a01b038216611da2576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b611dab816111d2565b15611dfd576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b611e096000838361082a565b6001600160a01b0382166000908152600160205260409020611e31908263ffffffff611a6b16565b50611e446002828463ffffffff611a7716565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611e95846001600160a01b03166122df565b611ea1575060016113e1565b600060606001600160a01b038616630a85bd0160e11b611ebf6111e5565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611f38578181015183820152602001611f20565b50505050905090810190601f168015611f655780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b60208310611fcd5780518252601f199092019160209182019101611fae565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461202f576040519150601f19603f3d011682016040523d82523d6000602084013e612034565b606091505b5091509150816120855780511561204e5780518082602001fd5b60405162461bcd60e51b815260040180806020018281038252603281526020018061233b6032913960400191505060405180910390fd5b600081806020019051602081101561209c57600080fd5b50516001600160e01b031916630a85bd0160e11b1493506113e192505050565b60009081526001919091016020526040902054151590565b604080516001600160f81b031960208083019190915260609390931b6bffffffffffffffffffffffff19166021820152603581019490945260558085019390935280518085039093018352607590930190925280519101206001600160a01b031690565b600081815260018301602052604081205480156121f4578354600019808301919081019060009087908390811061216b57fe5b906000526020600020015490508087600001848154811061218857fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806121b857fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610846565b6000915050610846565b600061220a83836120bc565b61224057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610846565b506000610846565b6000828152600184016020526040812054806122ad5750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556116e4565b828560000160018303815481106122c057fe5b90600052602060002090600202016001018190555060009150506116e4565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906113e157505015159291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a264697066735822122015e773a7c5020c22d0b44e49a468d0ae6893fb8e30964625d1abbcd1267181c364736f6c63430006060033608060405234801561001057600080fd5b50610744806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063150b7a02146100675780633121db1c1461014a5780637b103999146101cc5780638129fc1c146101f05780638da5cb5b146101f8578063d7f31eb914610200575b600080fd5b61012d6004803603608081101561007d57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156100b857600080fd5b8201836020820111156100ca57600080fd5b803590602001918460018302840111640100000000831117156100ec57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610285945050505050565b604080516001600160e01b03199092168252519081900360200190f35b6101ca6004803603604081101561016057600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561018b57600080fd5b82018360208201111561019d57600080fd5b803590602001918460018302840111640100000000831117156101bf57600080fd5b509092509050610295565b005b6101d4610338565b604080516001600160a01b039092168252519081900360200190f35b6101ca610347565b6101d4610352565b6101ca6004803603606081101561021657600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561024657600080fd5b82018360208201111561025857600080fd5b8035906020019184600183028401116401000000008311171561027a57600080fd5b5090925090506103cf565b630a85bd0160e11b949350505050565b3361029e610352565b6001600160a01b0316146102f3576040805162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015290519081900360640190fd5b6103338383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061052d92505050565b505050565b6000546001600160a01b031681565b61035033610698565b565b60008054604080516331a9108f60e11b815230600482015290516001600160a01b0390921691636352211e91602480820192602092909190829003018186803b15801561039e57600080fd5b505afa1580156103b2573d6000803e3d6000fd5b505050506040513d60208110156103c857600080fd5b5051905090565b336103d8610352565b6001600160a01b03161461042d576040805162461bcd60e51b815260206004820152601760248201527631b0b63632b91034b9903737ba103a34329037bbb732b960491b604482015290519081900360640190fd5b60006060856001600160a01b0316858585604051808383808284376040519201945060009350909150508083038185875af1925050503d806000811461048f576040519150601f19603f3d011682016040523d82523d6000602084013e610494565b606091505b50915091508181906105245760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156104e95781810151838201526020016104d1565b50505050905090810190601f1680156105165780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505050505050565b604080516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2600482015290516001600160a01b038416916302571be3916024808301926020929190829003018186803b15801561059357600080fd5b505afa1580156105a7573d6000803e3d6000fd5b505050506040513d60208110156105bd57600080fd5b505160405163c47f002760e01b81526020600482018181528451602484015284516001600160a01b039094169363c47f002793869383926044909201919085019080838360005b8381101561061c578181015183820152602001610604565b50505050905090810190601f1680156106495780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561066857600080fd5b505af115801561067c573d6000803e3d6000fd5b505050506040513d602081101561069257600080fd5b50505050565b6000546001600160a01b0316156106ec576040805162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b039290921691909117905556fea2646970667358221220efec042333921c1ae851d41033330984aae71033c2bfcaedad9c253114e5d4ae64736f6c63430006060033608060405234801561001057600080fd5b506103ad806100206000396000f3fe6080604052600436106100225760003560e01c8063d1f578941461003957610031565b366100315761002f6100ef565b005b61002f6100ef565b61002f6004803603604081101561004f57600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561007a57600080fd5b82018360208201111561008c57600080fd5b803590602001918460018302840111640100000000831117156100ae57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610109945050505050565b6100f7610107565b61010761010261022c565b610251565b565b600061011361022c565b6001600160a01b03161461012657600080fd5b60405180602361031a82396040519081900360230190207f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c314905061016757fe5b61017082610275565b805115610228576000826001600160a01b0316826040518082805190602001908083835b602083106101b35780518252601f199092019160209182019101610194565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610213576040519150601f19603f3d011682016040523d82523d6000602084013e610218565b606091505b505090508061022657600080fd5b505b5050565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b3660008037600080366000845af43d6000803e808015610270573d6000f35b3d6000fd5b61027e816102dd565b6102b95760405162461bcd60e51b815260040180806020018281038252603b81526020018061033d603b913960400191505060405180910390fd5b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061031157508115155b94935050505056fe6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a2646970667358221220f4af5f38b16e1ce890fd14497bea12d47bed23b9e542d8461f60b0d5a7952a1e64736f6c63430006060033",
  "deployedBytecode": "",
  "sourceMap": "154:734:1:-:0;;;218:98;5:9:-1;2:2;;;27:1;24;17:12;2:2;218:98:1;260:14;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;416:247:2;;;;;;;;;;;-1:-1:-1;;;416:247:2;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;416:247:2;;;;;;;718:40:12;-1:-1:-1;;;;;;;;718:18:12;:40;:::i;:::-;3491:12:15;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3513:16:15;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3617:40:15;-1:-1:-1;;;;;;;;3617:18:15;:40;:::i;:::-;3667:49;-1:-1:-1;;;;;;;;3667:18:15;:49;:::i;:::-;3726:51;-1:-1:-1;;;;;;;;3726:18:15;:51;:::i;:::-;-1:-1:-1;832:17:11;;-1:-1:-1;852:12:11;-1:-1:-1;;;;;852:10:11;:12;:::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:11;-1:-1:-1;;;;;874:18:11;;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:11;-1:-1:-1;;907:43:11;;-1:-1:-1;;907:43:11;-1:-1:-1;525:6:2::1;:23:::0;;-1:-1:-1;;;;;;525:23:2::1;-1:-1:-1::0;;;;;525:23:2;::::1;;::::0;;568:51:::1;::::0;::::1;;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;21:26;;;;;7:41;;87:2:::1;69:12:::0;;::::1;65:26;61:2;54:38:::0;552:67:2;;::::1;::::0;:9:::1;::::0;41:4:-1::1;30:16:::0;;;::::1;::::0;552:67:2::1;:::i;:::-;;649:9;639:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;639:20:2::1;::::0;;;;::::1;::::0;;623:13:::1;:36:::0;-1:-1:-1;154:734:1;;-1:-1:-1;;;;154:734:1;1449:198:12;-1:-1:-1;;;;;;1532:25:12;;;;;1524:66;;;;;-1:-1:-1;;;1524:66:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1600:33:12;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1600:40:12;1636:4;1600:40;;;1449:198::o;735:104:10:-;822:10;735:104;;:::o;154:734:1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;154:734:1;;;-1:-1:-1;154:734:1;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "154:734:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;154:734:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;915:140:12;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;915:140:12;-1:-1:-1;;;;;;915:140:12;;:::i;:::-;;;;;;;;;;;;;;;;;;4690:90:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4690:90:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9350:209;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;9350:209:15;;:::i;:::-;;;;-1:-1:-1;;;;;9350:209:15;;;;;;;;;;;;;;8684:381;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;8684:381:15;;;;;;;;:::i;:::-;;615:157:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;615:157:1;;;;;;;;:::i;7564:200:15:-;;;:::i;:::-;;;;;;;;;;;;;;;;11061:300;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;11061:300:15;;;;;;;;;;;;;;;;;:::i;7259:152::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;7259:152:15;;;;;;;;:::i;775:111:1:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;775:111:1;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;775:111:1;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;775:111:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;775:111:1;;-1:-1:-1;775:111:1;-1:-1:-1;775:111:1;:::i;12010:149:15:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;12010:149:15;;;;;;;;;;;;;;;;;:::i;8102:161::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;8102:161:15;;:::i;4418:167::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4418:167:15;;:::i;6798:87::-;;;:::i;353:26:2:-;;;:::i;3988:211:15:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3988:211:15;-1:-1:-1;;;;;3988:211:15;;:::i;1656:145:11:-;;;:::i;464:148:1:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;464:148:1;;;;;;;;:::i;1033:77:11:-;;;:::i;4889:94:15:-;;;:::i;9858:290::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;9858:290:15;;;;;;;;;;:::i;12882:282::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;12882:282:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;12882:282:15;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;12882:282:15;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;12882:282:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;12882:282:15;;-1:-1:-1;12882:282:15;;-1:-1:-1;;;;;12882:282:15:i;5826:740::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;5826:740:15;;:::i;10470:154::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;10470:154:15;;;;;;;;;;:::i;327:23:2:-;;;:::i;382:30::-;;;:::i;1950:240:11:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1950:240:11;-1:-1:-1;;;;;1950:240:11;;:::i;915:140:12:-;-1:-1:-1;;;;;;1015:33:12;;992:4;1015:33;;;;;;;;;;;;;915:140;;;;:::o;4690:90:15:-;4768:5;4761:12;;;;;;;;-1:-1:-1;;4761:12:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4736:13;;4761:12;;4768:5;;4761:12;;4768:5;4761:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:90;:::o;9350:209::-;9418:7;9445:16;9453:7;9445;:16::i;:::-;9437:73;;;;-1:-1:-1;;;9437:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9528:24:15;;;;:15;:24;;;;;;-1:-1:-1;;;;;9528:24:15;;9350:209::o;8684:381::-;8764:13;8780:16;8788:7;8780;:16::i;:::-;8764:32;;8820:5;-1:-1:-1;;;;;8814:11:15;:2;-1:-1:-1;;;;;8814:11:15;;;8806:57;;;;-1:-1:-1;;;8806:57:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8898:5;-1:-1:-1;;;;;8882:21:15;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8882:21:15;;:62;;;;8907:37;8924:5;8931:12;:10;:12::i;:::-;8907:16;:37::i;:::-;8874:152;;;;-1:-1:-1;;;8874:152:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9037:21;9046:2;9050:7;9037:8;:21::i;:::-;8684:381;;;:::o;615:157:1:-;692:7;721:46;734:6;742:24;760:5;742:17;:24::i;:::-;721:12;:46::i;:::-;706:62;;615:157;;;;;:::o;7564:200:15:-;7617:7;7736:21;:12;:19;:21::i;:::-;7729:28;;7564:200;:::o;11061:300::-;11220:41;11239:12;:10;:12::i;:::-;11253:7;11220:18;:41::i;:::-;11212:103;;;;-1:-1:-1;;;11212:103:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11326:28;11336:4;11342:2;11346:7;11326:9;:28::i;7259:152::-;-1:-1:-1;;;;;7374:20:15;;7348:7;7374:20;;;:13;:20;;;;;:30;;7398:5;7374:30;:23;:30;:::i;775:111:1:-;1247:12:11;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:11;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:26:1::1;869:4;876:5;;856:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16:::0;::::1;74:27:::0;;;;-1:-1;856:8:1::1;::::0;-1:-1:-1;;;856:26:1:i:1;12010:149:15:-:0;12113:39;12130:4;12136:2;12140:7;12113:39;;;;;;;;;;;;:16;:39::i;8102:161::-;8169:7;;8210:22;:12;8226:5;8210:22;:15;:22;:::i;:::-;-1:-1:-1;8188:44:15;8102:161;-1:-1:-1;;;8102:161:15:o;4418:167::-;4482:7;4508:70;4525:7;4508:70;;;;;;;;;;;;;;;;;:12;;:70;;:16;:70;:::i;6798:87::-;6870:8;6863:15;;;;;;;;-1:-1:-1;;6863:15:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6838:13;;6863:15;;6870:8;;6863:15;;6870:8;6863:15;;;;;;;;;;;;;;;;;;;;;;;;353:26:2;;;;;;;;;;;;;;;-1:-1:-1;;353:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3988:211:15:-;4052:7;-1:-1:-1;;;;;4079:19:15;;4071:74;;;;-1:-1:-1;;;4071:74:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4163:20:15;;;;;;:13;:20;;;;;:29;;:27;:29::i;1656:145:11:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:11;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:6:::1;::::0;1725:40:::1;::::0;1762:1:::1;::::0;-1:-1:-1;;;;;1746:6:11::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1775:6;:19:::0;;-1:-1:-1;;;;;;1775:19:11::1;::::0;;1656:145::o;464:148:1:-;533:7;562:45;574:6;582:24;600:5;582:17;:24::i;:::-;562:11;:45::i;1033:77:11:-;1097:6;;-1:-1:-1;;;;;1097:6:11;1033:77;:::o;4889:94:15:-;4969:7;4962:14;;;;;;;;-1:-1:-1;;4962:14:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4937:13;;4962:14;;4969:7;;4962:14;;4969:7;4962:14;;;;;;;;;;;;;;;;;;;;;;;;9858:290;9972:12;:10;:12::i;:::-;-1:-1:-1;;;;;9960:24:15;:8;-1:-1:-1;;;;;9960:24:15;;;9952:62;;;;;-1:-1:-1;;;9952:62:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;10070:8;10025:18;:32;10044:12;:10;:12::i;:::-;-1:-1:-1;;;;;10025:32:15;;;;;;;;;;;;;;;;;-1:-1:-1;10025:32:15;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;10025:53:15;;;;;;;;;;;10108:12;:10;:12::i;:::-;10093:48;;;;;;;;;;-1:-1:-1;;;;;10093:48:15;;;;;;;;;;;;;;9858:290;;:::o;12882:282::-;13013:41;13032:12;:10;:12::i;:::-;13046:7;13013:18;:41::i;:::-;13005:103;;;;-1:-1:-1;;;13005:103:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:39;13132:4;13138:2;13142:7;13151:5;13118:13;:39::i;:::-;12882:282;;;;:::o;5826:740::-;5891:13;5924:16;5932:7;5924;:16::i;:::-;5916:76;;;;-1:-1:-1;;;5916:76:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6029:19;;;;:10;:19;;;;;;;;;6003:45;;;;;;-1:-1:-1;;6003:45:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;6029:19;6003:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6127:8:15;6121:22;6003:45;;-1:-1:-1;;;;6121:22:15;-1:-1:-1;;6121:22:15;;;;;;;;;;;6117:74;;6171:9;-1:-1:-1;6164:16:15;;6117:74;6293:23;;:27;6289:110;;6367:8;6377:9;6350:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6350:37:15;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6350:37:15;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6350:37:15;;;6336:52;;;;;6289:110;6529:8;6539:18;:7;:16;:18::i;:::-;6512:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6512:46:15;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6512:46:15;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6512:46:15;;;6498:61;;;5826:740;;;:::o;10470:154::-;-1:-1:-1;;;;;10582:25:15;;;10559:4;10582:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;10470:154::o;327:23:2:-;;;-1:-1:-1;;;;;327:23:2;;:::o;382:30::-;;;;:::o;1950:240:11:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:11;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2038:22:11;::::1;2030:73;;;;-1:-1:-1::0;;;2030:73:11::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:6;::::0;2118:38:::1;::::0;-1:-1:-1;;;;;2118:38:11;;::::1;::::0;2139:6:::1;::::0;2118:38:::1;::::0;2139:6:::1;::::0;2118:38:::1;2166:6;:17:::0;;-1:-1:-1;;;;;;2166:17:11::1;-1:-1:-1::0;;;;;2166:17:11;;;::::1;::::0;;;::::1;::::0;;1950:240::o;14333:117:15:-;14390:4;14413:30;:12;14435:7;14413:30;:21;:30;:::i;735:104:10:-;822:10;735:104;:::o;21357:155:15:-;21422:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;21422:29:15;-1:-1:-1;;;;;21422:29:15;;;;;;;;:24;;21475:16;21422:24;21475:7;:16::i;:::-;-1:-1:-1;;;;;21466:39:15;;;;;;;;;;;21357:155;;:::o;319:142:1:-;411:46;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;411:46:1;;;;;25:18:-1;;61:17;;-1:-1;;;;;182:15;-1:-1;;;179:29;160:49;;411:46:1;319:142::o;1080:222:2:-;1162:7;1176:13;1192:81;1242:5;1249:6;1225:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1225:31:2;;;;;;;-1:-1:-1;;;;;1225:31:2;-1:-1:-1;;;;;1225:31:2;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1225:31:2;;;1215:42;;;;;;1259:13;;1192:22;:81::i;:::-;-1:-1:-1;;;;;1284:14:2;;1080:222;-1:-1:-1;;;;1080:222:2:o;6990:121:22:-;7059:7;7085:19;7093:3;7085:7;:19::i;14811:329:15:-;14896:4;14920:16;14928:7;14920;:16::i;:::-;14912:73;;;;-1:-1:-1;;;14912:73:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14995:13;15011:16;15019:7;15011;:16::i;:::-;14995:32;;15056:5;-1:-1:-1;;;;;15045:16:15;:7;-1:-1:-1;;;;;15045:16:15;;:51;;;;15089:7;-1:-1:-1;;;;;15065:31:15;:20;15077:7;15065:11;:20::i;:::-;-1:-1:-1;;;;;15065:31:15;;15045:51;:87;;;;15100:32;15117:5;15124:7;15100:16;:32::i;:::-;15037:96;14811:329;-1:-1:-1;;;;14811:329:15:o;18323:559::-;18440:4;-1:-1:-1;;;;;18420:24:15;:16;18428:7;18420;:16::i;:::-;-1:-1:-1;;;;;18420:24:15;;18412:78;;;;-1:-1:-1;;;18412:78:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18508:16:15;;18500:65;;;;-1:-1:-1;;;18500:65:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18576:39;18597:4;18603:2;18607:7;18576:20;:39::i;:::-;18677:29;18694:1;18698:7;18677:8;:29::i;:::-;-1:-1:-1;;;;;18717:19:15;;;;;;:13;:19;;;;;:35;;18744:7;18717:35;:26;:35;:::i;:::-;-1:-1:-1;;;;;;18762:17:15;;;;;;:13;:17;;;;;:30;;18784:7;18762:30;:21;:30;:::i;:::-;-1:-1:-1;18803:29:15;:12;18820:7;18829:2;18803:29;:16;:29;:::i;:::-;;18867:7;18863:2;-1:-1:-1;;;;;18848:27:15;18857:4;-1:-1:-1;;;;;18848:27:15;;;;;;;;;;;18323:559;;;:::o;7616:135:23:-;7687:7;7721:22;7725:3;7737:5;7721:3;:22::i;533:127:6:-;613:28;;;-1:-1:-1;;;613:28:6;;463:66;613:28;;;;;;-1:-1:-1;;;;;613:9:6;;;;;:28;;;;;;;;;;;;;;:9;:28;;;2:2:-1;;;;27:1;24;17:12;2:2;613:28:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;613:28:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;613:28:6;595:61;;-1:-1:-1;;;595:61:6;;613:28;595:61;;;;;;;;;;;;;;-1:-1:-1;;;;;595:55:6;;;;;;651:4;;595:61;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;595:61:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;595:61:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;595:61:6;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;7439:224:22;7519:7;;;;7578:22;7582:3;7594:5;7578:3;:22::i;:::-;7547:53;;;;-1:-1:-1;7439:224:22;-1:-1:-1;;;;;7439:224:22:o;8082:202::-;8189:7;8231:44;8236:3;8256;8262:12;8231:4;:44::i;:::-;8223:53;-1:-1:-1;8082:202:22;;;;;;:::o;681:396:2:-;757:7;797:13;813:72;828:1;858:5;865:6;841:31;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;841:31:2;;;;;;;-1:-1:-1;;;;;841:31:2;-1:-1:-1;;;;;841:31:2;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;841:31:2;;;831:42;;;;;;875:9;813:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:72::i;:::-;971:6;;911:74;;;-1:-1:-1;;;911:74:2;;-1:-1:-1;;;;;971:6:2;;;911:74;;;;;;;;;;;;;;;;;;;;797:88;;-1:-1:-1;911:59:2;;;;;;971:6;;979:5;;911:74;;;;;;;;;;;;;;971:6;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;911:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;911:74:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;911:74:2;;;;1019:29;1025:6;1041:5;-1:-1:-1;;;;;1033:14:2;1019:5;:29::i;:::-;-1:-1:-1;;;;;1059:14:2;;681:396;-1:-1:-1;;;681:396:2:o;13869:269:15:-;13982:28;13992:4;13998:2;14002:7;13982:9;:28::i;:::-;14028:48;14051:4;14057:2;14061:7;14070:5;14028:22;:48::i;:::-;14020:111;;;;-1:-1:-1;;;14020:111:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;169:723:24;225:13;442:10;438:51;;-1:-1:-1;468:10:24;;;;;;;;;;;;-1:-1:-1;;;468:10:24;;;;;;438:51;513:5;498:12;552:75;559:9;;552:75;;584:8;;614:2;606:10;;;;552:75;;;636:19;668:6;658:17;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;658:17:24;;;;;;;;;;;;;;;;;;;;;;;;;;21:6:-1;;108:14;658:17:24;87:42:-1;143:17;;-1:-1;658:17:24;-1:-1:-1;728:5:24;;-1:-1:-1;636:39:24;-1:-1:-1;;;701:10:24;;743:112;750:9;;743:112;;816:2;809:4;:9;804:2;:14;793:27;;775:6;782:7;;;;;;;775:15;;;;;;;;;;;:45;-1:-1:-1;;;;;775:45:24;;;;;;;;-1:-1:-1;842:2:24;834:10;;;;743:112;;;-1:-1:-1;878:6:24;169:723;-1:-1:-1;;;;169:723:24:o;6758:149:22:-;6842:4;6865:35;6875:3;6895;6865:9;:35::i;1719:165:21:-;1802:7;1828:49;1843:4;1849:12;1871:4;1828:14;:49::i;4450:108:22:-;4532:19;;4450:108::o;6731:135:23:-;6801:4;6824:35;6832:3;6852:5;6824:7;:35::i;6434:129::-;6501:4;6524:32;6529:3;6549:5;6524:4;:32::i;6206:174:22:-;6295:4;6318:55;6323:3;6343;-1:-1:-1;;;;;6357:14:22;;6318:4;:55::i;4390:201:23:-;4484:18;;4457:7;;4484:26;-1:-1:-1;4476:73:23;;;;-1:-1:-1;;;4476:73:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;4901:274:22:-;5004:19;;4968:7;;;;5004:27;-1:-1:-1;4996:74:22;;;;-1:-1:-1;;;4996:74:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5081:22;5106:3;:12;;5119:5;5106:19;;;;;;;;;;;;;;;;;;5081:44;;5143:5;:10;;;5155:5;:12;;;5135:33;;;;;4901:274;;;;;:::o;5582:315::-;5676:7;5714:17;;;:12;;;:17;;;;;;5764:12;5749:13;5741:36;;;;-1:-1:-1;;;5741:36:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5741:36:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5830:3;:12;;5854:1;5843:8;:12;5830:26;;;;;;;;;;;;;;;;;;:33;;;5823:40;;;5582:315;;;;;:::o;980:535:21:-;1067:7;1086:12;1141:6;1116:21;:31;;1108:73;;;;;-1:-1:-1;;;1108:73:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:15;;1191:65;;;;;-1:-1:-1;;;1191:65:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1407:4;1396:8;1390:15;1383:4;1373:8;1369:19;1361:6;1353:59;1345:67;-1:-1:-1;;;;;;1439:18:21;;1431:56;;;;;-1:-1:-1;;;1431:56:21;;;;;;;;;;;;;;;;;;;;;;;;;;;16870:393:15;-1:-1:-1;;;;;16949:16:15;;16941:61;;;;;-1:-1:-1;;;16941:61:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17021:16;17029:7;17021;:16::i;:::-;17020:17;17012:58;;;;;-1:-1:-1;;;17012:58:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;17081:45;17110:1;17114:2;17118:7;17081:20;:45::i;:::-;-1:-1:-1;;;;;17137:17:15;;;;;;:13;:17;;;;;:30;;17159:7;17137:30;:21;:30;:::i;:::-;-1:-1:-1;17178:29:15;:12;17195:7;17204:2;17178:29;:16;:29;:::i;:::-;-1:-1:-1;17223:33:15;;17248:7;;-1:-1:-1;;;;;17223:33:15;;;17240:1;;17223:33;;17240:1;;17223:33;16870:393;;:::o;20301:1050::-;20421:4;20446:15;:2;-1:-1:-1;;;;;20446:13:15;;:15::i;:::-;20441:58;;-1:-1:-1;20484:4:15;20477:11;;20441:58;20568:12;20582:23;-1:-1:-1;;;;;20609:7:15;;-1:-1:-1;;;20712:12:15;:10;:12::i;:::-;20738:4;20756:7;20777:5;20617:175;;;;;;-1:-1:-1;;;;;20617:175:15;-1:-1:-1;;;;;20617:175:15;;;;;;-1:-1:-1;;;;;20617:175:15;-1:-1:-1;;;;;20617:175:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;20617:175:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20617:175:15;;;-1:-1:-1;;26:21;;;22:32;6:49;;20617:175:15;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;20617:175:15;;;179:29:-1;;;;160:49;;20609:184:15;;;20617:175;;20609:184;;-1:-1:-1;20609:184:15;;-1:-1:-1;25:18;-1:-1;20609:184:15;-1:-1:-1;20609:184:15;;-1:-1:-1;20609:184:15;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;20609:184:15;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;20567:226:15;;;;20808:7;20803:542;;20835:17;;:21;20831:376;;21000:10;20994:17;21060:15;21047:10;21043:2;21039:19;21032:44;20949:145;21132:60;;-1:-1:-1;;;21132:60:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20803:542;21237:13;21264:10;21253:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;21253:32:15;-1:-1:-1;;;;;;21307:26:15;-1:-1:-1;;;21307:26:15;;-1:-1:-1;21299:35:15;;-1:-1:-1;;;21299:35:15;4237:123:22;4308:4;4331:17;;;:12;;;;;:17;;;;;;:22;;;4237:123::o;2127:282:21:-;2286:60;;;-1:-1:-1;;;;;;2286:60:21;;;;;;;;;;;;;-1:-1:-1;;2286:60:21;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2286:60:21;;;;;;;2263:93;;;;;-1:-1:-1;;;;;2373:29:21;;2127:282::o;2150:1512:23:-;2216:4;2353:19;;;:12;;;:19;;;;;;2387:15;;2383:1273;;2816:18;;-1:-1:-1;;2768:14:23;;;;2816:22;;;;2744:21;;2816:3;;:22;;3098;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;;;;;:38;;;;3316:23;;;3358:1;3316:12;;;:23;;;;;;3342:17;;;3316:43;;3465:17;;3316:3;;3465:17;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;;;1578:404;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;-1:-1:-1;27:10;;39:1;23:18;;;45:23;;1699:11:23;:23;;;;;;;;;;;;;1879:18;;1857:19;;;:12;;;:19;;;;;;:40;;;;1911:11;;1657:319;-1:-1:-1;1960:5:23;1953:12;;1795:678:22;1871:4;2004:17;;;:12;;;:17;;;;;;2036:13;2032:435;;-1:-1:-1;;2120:38:22;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;;45:23;;2102:12:22;:57;;;;;;;;;;;;;;;;;;;;;;;;2314:19;;2294:17;;;:12;;;:17;;;;;;;:39;2347:11;;2032:435;2425:5;2389:3;:12;;2413:1;2402:8;:12;2389:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2451:5;2444:12;;;;;685:610:20;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;;1272:15:20;;;1237:51;-1:-1:-1;;685:610:20:o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"@iexec/solidity/contracts/ENStools/ENSReverseRegistration.sol\";\nimport \"./core/Registry.sol\";\nimport \"./NFWallet.sol\";\n\n\ncontract NFWalletFactory is Registry, ENSReverseRegistration\n{\n\tconstructor()\n\tpublic Registry(\n\t\taddress(new NFWallet()),\n\t\t'NonFungibleWallets',\n\t\t'NFWs')\n\t{\n\t}\n\n\tfunction encodeInitializer(bytes32 _salt)\n\tinternal pure returns (bytes memory)\n\t{\n\t\treturn abi.encodeWithSignature('initialize()', _salt);\n\t}\n\n\tfunction openWallet(address _owner, bytes32 _salt)\n\texternal returns(address)\n\t{\n\t\treturn address(_mintCreate(_owner, encodeInitializer(_salt)));\n\t}\n\n\tfunction predictWallet(address _owner, bytes32 _salt)\n\texternal view returns(address)\n\t{\n\t\treturn address(_mintPredict(_owner, encodeInitializer(_salt)));\n\t}\n\n\tfunction setName(address _ens, string calldata _name)\n\texternal onlyOwner()\n\t{\n\t\t_setName(ENS(_ens), _name);\n\t}\n}\n",
  "sourcePath": "/home/amxx/Work/Projects/NFWallets/contracts/NFWalletFactory.sol",
  "ast": {
    "absolutePath": "/home/amxx/Work/Projects/NFWallets/contracts/NFWalletFactory.sol",
    "exportedSymbols": {
      "NFWalletFactory": [
        185
      ]
    },
    "id": 186,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 92,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@iexec/solidity/contracts/ENStools/ENSReverseRegistration.sol",
        "file": "@iexec/solidity/contracts/ENStools/ENSReverseRegistration.sol",
        "id": 93,
        "nodeType": "ImportDirective",
        "scope": 186,
        "sourceUnit": 623,
        "src": "25:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/Projects/NFWallets/contracts/core/Registry.sol",
        "file": "./core/Registry.sol",
        "id": 94,
        "nodeType": "ImportDirective",
        "scope": 186,
        "sourceUnit": 312,
        "src": "97:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/Projects/NFWallets/contracts/NFWallet.sol",
        "file": "./NFWallet.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 186,
        "sourceUnit": 91,
        "src": "127:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 96,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 311,
              "src": "182:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$311",
                "typeString": "contract Registry"
              }
            },
            "id": 97,
            "nodeType": "InheritanceSpecifier",
            "src": "182:8:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 98,
              "name": "ENSReverseRegistration",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 622,
              "src": "192:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ENSReverseRegistration_$622",
                "typeString": "contract ENSReverseRegistration"
              }
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "192:22:1"
          }
        ],
        "contractDependencies": [
          90,
          311,
          622,
          820,
          929,
          985,
          997,
          2141,
          2249,
          2277,
          2301
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 185,
        "linearizedBaseContracts": [
          185,
          622,
          311,
          929,
          2141,
          2277,
          2301,
          2249,
          985,
          997,
          820
        ],
        "name": "NFWalletFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "312:4:1",
              "statements": []
            },
            "documentation": null,
            "id": 113,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "260:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NFWallet_$90_$",
                            "typeString": "function () returns (contract NFWallet)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 104,
                            "name": "NFWallet",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 90,
                            "src": "264:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFWallet_$90",
                              "typeString": "contract NFWallet"
                            }
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "260:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFWallet_$90",
                          "typeString": "contract NFWallet"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NFWallet_$90",
                          "typeString": "contract NFWallet"
                        }
                      ],
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "252:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 102,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "252:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "252:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4e6f6e46756e6769626c6557616c6c657473",
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "279:20:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_fbbc9f3bee80d9499b1127ea58f4d9625dbea18944e67190a1902baeddb4a76f",
                      "typeString": "literal_string \"NonFungibleWallets\""
                    },
                    "value": "NonFungibleWallets"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4e465773",
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "303:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_09c5069626c86e2d224a30e17f4c877d4197c87e1ff9df486647cbb68d83ff26",
                      "typeString": "literal_string \"NFWs\""
                    },
                    "value": "NFWs"
                  }
                ],
                "id": 110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 101,
                  "name": "Registry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 311,
                  "src": "240:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Registry_$311_$",
                    "typeString": "type(contract Registry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "240:70:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:1"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:0:1"
            },
            "scope": 185,
            "src": "218:98:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "400:61:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c697a652829",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "435:14:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
                          "typeString": "literal_string \"initialize()\""
                        },
                        "value": "initialize()"
                      },
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "_salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "451:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
                          "typeString": "literal_string \"initialize()\""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "411:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "411:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "411:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 125,
                  "nodeType": "Return",
                  "src": "404:53:1"
                }
              ]
            },
            "documentation": null,
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeInitializer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 127,
                  "src": "346:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "345:15:1"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 127,
                  "src": "385:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:14:1"
            },
            "scope": 185,
            "src": "319:142:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "543:69:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "574:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 141,
                                "name": "_salt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131,
                                "src": "600:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 140,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "582:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes32) pure returns (bytes memory)"
                              }
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "582:24:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 138,
                          "name": "_mintCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "562:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) returns (uint256)"
                          }
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "562:45:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "554:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 136,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "554:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "554:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 145,
                  "nodeType": "Return",
                  "src": "547:61:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "75f50019",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openWallet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "484:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "500:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "483:31:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "533:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "532:9:1"
            },
            "scope": 185,
            "src": "464:148:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "702:70:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "734:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 161,
                                "name": "_salt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151,
                                "src": "760:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 160,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "742:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes32) pure returns (bytes memory)"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "742:24:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 158,
                          "name": "_mintPredict",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "721:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) view returns (uint256)"
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "721:46:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "713:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "713:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 155,
                  "id": 165,
                  "nodeType": "Return",
                  "src": "706:62:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "136fecbd",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictWallet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "638:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "654:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:31:1"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "692:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "691:9:1"
            },
            "scope": 185,
            "src": "615:157:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "852:34:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 178,
                            "name": "_ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "869:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 177,
                          "name": "ENS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 566,
                          "src": "865:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ENS_$566_$",
                            "typeString": "type(contract ENS)"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "865:9:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$566",
                          "typeString": "contract ENS"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "876:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ENS_$566",
                          "typeString": "contract ENS"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 176,
                      "name": "_setName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "856:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ENS_$566_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract ENS,string memory)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "856:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "856:26:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3121db1c",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 174,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 173,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 878,
                  "src": "839:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "839:11:1"
              }
            ],
            "name": "setName",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_ens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 184,
                  "src": "792:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 184,
                  "src": "806:21:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "791:37:1"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:0:1"
            },
            "scope": 185,
            "src": "775:111:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 186,
        "src": "154:734:1"
      }
    ],
    "src": "0:889:1"
  },
  "legacyAST": {
    "absolutePath": "/home/amxx/Work/Projects/NFWallets/contracts/NFWalletFactory.sol",
    "exportedSymbols": {
      "NFWalletFactory": [
        185
      ]
    },
    "id": 186,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 92,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@iexec/solidity/contracts/ENStools/ENSReverseRegistration.sol",
        "file": "@iexec/solidity/contracts/ENStools/ENSReverseRegistration.sol",
        "id": 93,
        "nodeType": "ImportDirective",
        "scope": 186,
        "sourceUnit": 623,
        "src": "25:71:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/Projects/NFWallets/contracts/core/Registry.sol",
        "file": "./core/Registry.sol",
        "id": 94,
        "nodeType": "ImportDirective",
        "scope": 186,
        "sourceUnit": 312,
        "src": "97:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/amxx/Work/Projects/NFWallets/contracts/NFWallet.sol",
        "file": "./NFWallet.sol",
        "id": 95,
        "nodeType": "ImportDirective",
        "scope": 186,
        "sourceUnit": 91,
        "src": "127:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 96,
              "name": "Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 311,
              "src": "182:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Registry_$311",
                "typeString": "contract Registry"
              }
            },
            "id": 97,
            "nodeType": "InheritanceSpecifier",
            "src": "182:8:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 98,
              "name": "ENSReverseRegistration",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 622,
              "src": "192:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ENSReverseRegistration_$622",
                "typeString": "contract ENSReverseRegistration"
              }
            },
            "id": 99,
            "nodeType": "InheritanceSpecifier",
            "src": "192:22:1"
          }
        ],
        "contractDependencies": [
          90,
          311,
          622,
          820,
          929,
          985,
          997,
          2141,
          2249,
          2277,
          2301
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 185,
        "linearizedBaseContracts": [
          185,
          622,
          311,
          929,
          2141,
          2277,
          2301,
          2249,
          985,
          997,
          820
        ],
        "name": "NFWalletFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "312:4:1",
              "statements": []
            },
            "documentation": null,
            "id": 113,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "260:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NFWallet_$90_$",
                            "typeString": "function () returns (contract NFWallet)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 104,
                            "name": "NFWallet",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 90,
                            "src": "264:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFWallet_$90",
                              "typeString": "contract NFWallet"
                            }
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "260:14:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFWallet_$90",
                          "typeString": "contract NFWallet"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_NFWallet_$90",
                          "typeString": "contract NFWallet"
                        }
                      ],
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "252:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 102,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "252:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "252:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4e6f6e46756e6769626c6557616c6c657473",
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "279:20:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_fbbc9f3bee80d9499b1127ea58f4d9625dbea18944e67190a1902baeddb4a76f",
                      "typeString": "literal_string \"NonFungibleWallets\""
                    },
                    "value": "NonFungibleWallets"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4e465773",
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "303:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_09c5069626c86e2d224a30e17f4c877d4197c87e1ff9df486647cbb68d83ff26",
                      "typeString": "literal_string \"NFWs\""
                    },
                    "value": "NFWs"
                  }
                ],
                "id": 110,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 101,
                  "name": "Registry",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 311,
                  "src": "240:8:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Registry_$311_$",
                    "typeString": "type(contract Registry)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "240:70:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:1"
            },
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:0:1"
            },
            "scope": 185,
            "src": "218:98:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "400:61:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "696e697469616c697a652829",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "435:14:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
                          "typeString": "literal_string \"initialize()\""
                        },
                        "value": "initialize()"
                      },
                      {
                        "argumentTypes": null,
                        "id": 123,
                        "name": "_salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 115,
                        "src": "451:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8129fc1cf5a76b8b9d76c7ab5059b1685decddb2380c6e4cebb774b7c17ae83f",
                          "typeString": "literal_string \"initialize()\""
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 120,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "411:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodeWithSignature",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "411:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "411:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 125,
                  "nodeType": "Return",
                  "src": "404:53:1"
                }
              ]
            },
            "documentation": null,
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "encodeInitializer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 127,
                  "src": "346:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "346:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "345:15:1"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 127,
                  "src": "385:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "385:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:14:1"
            },
            "scope": 185,
            "src": "319:142:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "543:69:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 139,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "574:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 141,
                                "name": "_salt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 131,
                                "src": "600:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 140,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "582:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes32) pure returns (bytes memory)"
                              }
                            },
                            "id": 142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "582:24:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 138,
                          "name": "_mintCreate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 281,
                          "src": "562:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) returns (uint256)"
                          }
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "562:45:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "554:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 136,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "554:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "554:54:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 135,
                  "id": 145,
                  "nodeType": "Return",
                  "src": "547:61:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "75f50019",
            "id": 147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "openWallet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "484:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 131,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "500:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 130,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "483:31:1"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 147,
                  "src": "533:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "532:9:1"
            },
            "scope": 185,
            "src": "464:148:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "702:70:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 159,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "734:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 161,
                                "name": "_salt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 151,
                                "src": "760:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 160,
                              "name": "encodeInitializer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 127,
                              "src": "742:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes32) pure returns (bytes memory)"
                              }
                            },
                            "id": 162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "742:24:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 158,
                          "name": "_mintPredict",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 310,
                          "src": "721:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (address,bytes memory) view returns (uint256)"
                          }
                        },
                        "id": 163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "721:46:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "713:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "713:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 155,
                  "id": 165,
                  "nodeType": "Return",
                  "src": "706:62:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "136fecbd",
            "id": 167,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "predictWallet",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "638:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_salt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "654:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "637:31:1"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 167,
                  "src": "692:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "692:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "691:9:1"
            },
            "scope": 185,
            "src": "615:157:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "852:34:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 178,
                            "name": "_ens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "869:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 177,
                          "name": "ENS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 566,
                          "src": "865:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ENS_$566_$",
                            "typeString": "type(contract ENS)"
                          }
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "865:9:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ENS_$566",
                          "typeString": "contract ENS"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 180,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "876:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ENS_$566",
                          "typeString": "contract ENS"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 176,
                      "name": "_setName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 621,
                      "src": "856:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ENS_$566_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract ENS,string memory)"
                      }
                    },
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "856:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "856:26:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3121db1c",
            "id": 184,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 174,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 173,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 878,
                  "src": "839:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "839:11:1"
              }
            ],
            "name": "setName",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_ens",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 184,
                  "src": "792:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 184,
                  "src": "806:21:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "806:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "791:37:1"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:0:1"
            },
            "scope": 185,
            "src": "775:111:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 186,
        "src": "154:734:1"
      }
    ],
    "src": "0:889:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-22T19:19:06.654Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}).     * If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings.     * .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |===     * Requirements:     * - `tokenId` must exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}